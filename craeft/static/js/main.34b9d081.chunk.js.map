{"version":3,"sources":["engine/data/types.js","components/structure/Header.js","components/ItemDescription.js","components/ItemStats.js","engine/items/weapon.js","engine/items/item.js","engine/delay.js","engine/tickable.js","engine/organism.js","Craeft.js","engine/farm.js","components/structure/Footer.js","components/Farm.js","components/Items.js","components/Slider.js","engine/data/names.js","components/CraefterDescription.js","components/PreItemDescription.js","components/CraeftWindow.js","engine/craefter/weaponsmith.js","engine/items/armor.js","engine/craefter/armorsmith.js","components/CraefterWindow.js","components/Craefter.js","components/Craefters.js","engine/equipment.js","engine/player.js","components/Equipment.js","components/Player.js","tools/rand.js","components/ItemIcon.js","engine/ratios.js","engine/resources.js","engine/craefter/craefter.js","components/Progress.js","components/Gauge.js","serviceWorker.js","About.js","index.js","tools/timer.js"],"names":["__webpack_require__","d","__webpack_exports__","Unknown","ResourceTypes","CraefterTypes","ItemCategories","WeaponTypes","WeaponSlots","ArmorSlots","ArmorTypes","JewelerySlots","Object","freeze","Symbol","Knife","JewelKnife","Sword","JewelSword","Staff","Wand","JewelWand","WoodenPlate","MetalPlate","WoodenChainmail","MetalChainmail","Woven","JewelWoven","Weapon","Armor","Jewelery","Weaponsmith","Armorsmith","Jewelcraefter","Alchemist","LeftHand","RightHand","Head","Body","Legs","Feet","Left","Right","Wood","Metal","Cloth","Diamond","Header","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","Component","ItemDescription","_this","this","props","item","level","name","_ItemStats__WEBPACK_IMPORTED_MODULE_6__","equiped","onClick","onUnequip","onEquip","ItemStats","atk","atkMax","matk","matkMax","def","defMax","mdef","mdefMax","_ref","arguments","length","undefined","_ref$type","type","_ref$slot","slot","_ref$isMultiSlot","isMultiSlot","_ref$name","getRandomArrayItem","array","names","_ref$atk","_ref$matk","material","delay","_Users_sebastian_projects_cr_ft_cr_ft_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_sebastian_projects_cr_ft_cr_ft_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","_Users_sebastian_projects_cr_ft_cr_ft_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","call","category","Item","_ref$category","_ref$level","_ref$delay","global","onDoneCreating","Delay","onDelayExpired","delayInSeconds","isDelaying","timer","Timer","callback","finish","autoStart","Tickable","Organism","sta","classCallCheck","possibleConstructorReturn","getPrototypeOf","dead","staCurrent","staMax","expCurrent","expMax","exp","levelUp","Math","log","versionMsg","concat","console","Craeft","_Users_sebastian_projects_cr_ft_cr_ft_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_Users_sebastian_projects_cr_ft_cr_ft_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_sebastian_projects_cr_ft_cr_ft_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","gameTick","state","logs","player","Player","farm","Farm","craefters","items","resources","Resources","initialResources","farmComplete","bind","_Users_sebastian_projects_cr_ft_cr_ft_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","farmStart","addCraefter","addItem","equipItem","unEquipItem","knife","equipment","equip","_this2","setInterval","tick","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","next","done","value","err","return","forceUpdate","clearInterval","exhaust","result","add","damage","addExp","setState","craefter","_this3","_Users_sebastian_projects_cr_ft_cr_ft_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","push","resourcesConsumed","_this4","sub","unequip","indexOf","entry","react__WEBPACK_IMPORTED_MODULE_7___default","_components_structure_Header__WEBPACK_IMPORTED_MODULE_11__","_components_Player__WEBPACK_IMPORTED_MODULE_12__","_components_Craefters__WEBPACK_IMPORTED_MODULE_15__","craefterAdded","itemAdded","_components_Farm__WEBPACK_IMPORTED_MODULE_13__","_components_Items__WEBPACK_IMPORTED_MODULE_14__","onItemEquip","_components_structure_Footer__WEBPACK_IMPORTED_MODULE_10__","pause","start","Footer","href","_Users_sebastian_projects_cr_ft_cr_ft_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_sebastian_projects_cr_ft_cr_ft_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","isFarming","_Users_sebastian_projects_cr_ft_cr_ft_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","react__WEBPACK_IMPORTED_MODULE_6___default","disabled","getTimeoutString","Items","selectedItem","selectItem","i","_ItemDescription__WEBPACK_IMPORTED_MODULE_7__","filter","map","index","_ItemIcon__WEBPACK_IMPORTED_MODULE_8__","key","isSelected","isSmall","onItemSelected","mouseDown","defaultValue","element","React","createRef","track","leftEdge","rightEdge","setValue","assertThisInitialized","move","slideTo","onValueChange","pos","stepWidth","current","offsetWidth","v","round","max","min","window","addEventListener","edgeWidth","step","left","floor","react_default","ref","style","display","onChange","event","target","onMouseDown","onMouseUp","onMouseMove","e","nativeEvent","offsetX","layerX","CraefterTypeNames","_Object$freeze","defineProperty","ItemNames","_Object$freeze2","SlotNames","_Object$freeze3","CraefterDescription","str","dex","int","luk","Gauge","label","color","PreItemDescription","ItemIcon","preItem","CraeftWindow","updateResource","craeft","which","evaluateItem","CraefterDescription_CraefterDescription","Slider_Farm","PreItemDescription_PreItemDescription","_ref$str","_ref$int","_ref$dex","_ref$luk","ratios","highestResource","_ref2","baseline","sum","Craefter","calculateMaterialImpact","getHighest","evaluateItemType","prefixes","itemCanBeTwoHanded","parts","apply","join","_this$evaluateItem","getRandomInt","evaluateItemName","_ref$def","_ref$mdef","getRandomObjectEntry","object","evaluateSlot","CraefterWindow","addWS","addAS","Weaoponsmith","verticalAlign","minWidth","classNames","openCraeftDialog","canCraeft","Craefters","isCraefting","isAddingCraefter","currentCraefter","openCraefterDialog","hasEnoughResources","CraeftWindow_CraeftWindow","aria-label","CraefterWindow_CraefterWindow","Craefter_Craefter","Equipment","symbolSlots","getOwnPropertySymbols","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","findSlotByItem","peopleNames","_ref$hp","hp","_ref$sta","_ref$vit","vit","hpCurrent","hpMax","class","getEquiped","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","get","prototype","dmg","slice","Equipment_Equipment","ceil","random","_ref$start","keys","itemSelected","containerClasses","itemClasses","Ratios","sortable","resource","sort","b","highest","_ref$initialResources","math","gcd","_Users_sebastian_projects_cr_ft_cr_ft_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_4__","Progress","width","filled","Progress_Progress","Boolean","location","hostname","match","About","render","component","hash","substr","About_About","src_Craeft","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","_ref$autoStart","id","startDate","remaining","running","Date","setTimeout","clearTimeout","getTimeLeft","timeoutInSeconds","getTimeLeftInSeconds","mins"],"mappings":"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","file":"static/js/main.34b9d081.chunk.js","sourcesContent":["const Unknown = Object.freeze(Symbol(\"unknown\"));\n\nconst WeaponTypes = Object.freeze({\n    Knife: Symbol(\"knife\"),\n    JewelKnife: Symbol(\"jewel_knife\"),\n    Sword: Symbol(\"sword\"),\n    JewelSword: Symbol(\"jewel_sword\"),\n    Staff: Symbol(\"staff\"),\n    Wand: Symbol(\"wand\"),\n    JewelWand: Symbol(\"jewel_wand\")\n});\n\nconst ArmorTypes = Object.freeze({\n    WoodenPlate: Symbol(\"wooden_plate\"),\n    MetalPlate: Symbol(\"metal_plate\"),\n    WoodenChainmail: Symbol(\"wooden_chainmail\"),\n    MetalChainmail: Symbol(\"metal_chainmail\"),\n    Woven: Symbol(\"woven\"),\n    JewelWoven: Symbol(\"jewel_woven\")\n});\n\nconst ItemCategories = Object.freeze({\n    Weapon: Symbol(\"weapon\"),\n    Armor: Symbol(\"armor\"),\n    Jewelery: Symbol(\"jewelery\")\n});\n\nconst CraefterTypes = Object.freeze({\n    Weaponsmith: Symbol(\"weaponsmith\"),\n    Armorsmith: Symbol(\"armorsmith\"),\n    Jewelcraefter: Symbol(\"jewelcraefter\"),\n    Alchemist: Symbol(\"alchemist\")\n});\n\nconst WeaponSlots = Object.freeze({\n    LeftHand: Symbol(\"left_hand\"),\n    RightHand: Symbol(\"right_hand\")\n});\n\nconst ArmorSlots = Object.freeze({\n    Head: Symbol(\"head\"),\n    Body: Symbol(\"body\"),\n    Legs: Symbol(\"legs\"),\n    Feet: Symbol(\"feet\")\n});\n\nconst JewelerySlots = Object.freeze({\n    Left: Symbol(\"left\"),\n    Right: Symbol(\"right\")\n});\n\nconst ResourceTypes = Object.freeze({\n    Wood: Symbol(\"wood\"),\n    Metal: Symbol(\"metal\"),\n    Cloth: Symbol(\"cloth\"),\n    Diamond: Symbol(\"diamond\")\n});\n\nexport {\n    Unknown,\n    ResourceTypes,\n    CraefterTypes,\n    ItemCategories,\n    WeaponTypes,\n    WeaponSlots,\n    ArmorSlots,\n    ArmorTypes,\n    JewelerySlots\n}\n","import React, {Component} from \"react\";\n\nexport default class Header extends Component {\n\n    render() {\n        return (\n            <div className={\"row craeft-logo\"}>\n                <span>Cräft!</span>\n                <hr/>\n            </div>\n        )\n    }\n}","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport ItemStats from \"./ItemStats\";\n\nexport default class ItemDescription extends Component {\n\n    static propTypes = {\n        item: PropTypes.object,\n        onUnequip: PropTypes.func,\n        onEquip: PropTypes.func\n    };\n\n    render() {\n        return (\n            <div>\n\n                <div>\n                    Level: {this.props.item.level} {this.props.item.name}\n                </div>\n\n                <ItemStats item={this.props.item}/>\n\n                {\n                    !this.props.item.equiped && true === false ?\n                        <button className='rpgui-button'>\n                            <span>Disentchant</span>\n                        </button>\n                        : null\n                }\n\n                {\n                    this.props.item.equiped ?\n                        <button className='rpgui-button'\n                                onClick={() => this.props.onUnequip(this.props.item)}>\n                            <span>Unequip</span>\n                        </button>\n                        :\n                        <button className='rpgui-button'\n                                onClick={() => this.props.onEquip(this.props.item)}>\n                            <span>Equip</span>\n                        </button>\n                }\n\n            </div>\n        )\n    }\n}","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class ItemStats extends Component {\n    static propTypes = {\n        item: PropTypes.object\n    };\n\n    render() {\n        return (\n            <div className='row'>\n\n                {\n                    this.props.item.atk ?\n                        <span className='nowrap'>\n                            Atk: {this.props.item.atk}\n                            {\n                                this.props.item.atkMax ?\n                                    <span>-{this.props.item.atkMax}</span> : null\n                            }\n                            &nbsp;\n                        </span> : null\n                }\n\n                {\n                    this.props.item.matk ?\n                        <span className='nowrap'>\n                            Matk: {this.props.item.matk}\n                            {\n                                this.props.item.matkMax ?\n                                    <span>-{this.props.item.matkMax}</span> : null\n                            }\n                            &nbsp;\n                        </span> : null\n                }\n\n                {\n                    this.props.item.def ?\n                        <span className='nowrap'>\n                            Def: {this.props.item.def}\n                            {\n                                this.props.item.defMax ?\n                                    <span>-{this.props.item.defMax}</span> : null\n                            }\n                            &nbsp;\n                        </span> : null\n                }\n\n                {\n                    this.props.item.mdef ?\n                        <span className='nowrap'>\n                            Mdef: {this.props.item.mdef}\n                            {\n                                this.props.item.mdefMax ?\n                                    <span>-{this.props.item.mdefMax}</span> : null\n                            }\n                            &nbsp;\n                        </span> : null\n                }\n\n            </div>\n        )\n    }\n}","import Item from \"./item\";\nimport {getRandomArrayItem} from \"../../tools/rand\";\nimport {\n    Unknown,\n    ItemCategories\n} from \"../data/types\";\n\nimport names from \"../data/weapon_names\";\n\nexport default class Weapon extends Item {\n\n    constructor({\n                    type = Unknown,\n                    slot = Unknown,\n                    isMultiSlot = false,\n                    name = getRandomArrayItem({\n                        array: names\n                    }),\n                    level,\n                    atk = 0,\n                    matk = 0,\n                    material,\n                    delay\n                } = {}) {\n\n        super({\n            category: ItemCategories.Weapon,\n            type,\n            slot,\n            isMultiSlot,\n            name,\n            level,\n            material,\n            delay\n        });\n\n        this.atk = atk;\n        this.matk = matk;\n    }\n}\n","import Delay from \"../delay\";\nimport {Unknown} from \"../data/types\";\n\nexport default class Item {\n\n    equiped = false;\n    onDoneCreating = null;\n\n    constructor({\n                    category = Unknown,\n                    name,\n                    slot,\n                    isMultiSlot = false,\n                    level = 1,\n                    material,\n                    delay = global.delay || 10\n                } = {}) {\n\n        this.delay = new Delay(delay);\n\n        this.delay.onDelayExpired = () => {\n            if (this.onDoneCreating) {\n                this.onDoneCreating();\n            }\n        };\n\n        this.material = material;\n        this.category = category;\n        this.slot = slot;\n        this.isMultiSlot = isMultiSlot;\n        this.name = name;\n        this.level = level;\n    }\n}\n","import Timer from \"../tools/timer\";\n\nexport default class Delay {\n    isDelaying = true;\n    onDelayExpired = null;\n\n    finish() {\n        this.isDelaying = false;\n        if (this.onDelayExpired) {\n            this.onDelayExpired()\n        }\n    }\n\n    constructor(\n        delayInSeconds\n    ) {\n        if (delayInSeconds > -1) {\n            this.timer = new Timer(\n                {\n                    callback: () => {\n                        this.finish();\n                    },\n                    delay: delayInSeconds,\n                    autoStart: true\n                }\n            )\n        } else {\n            this.finish();\n        }\n    }\n}","export default class Tickable {\n    tick() {\n        // stub please override\n    }\n}","import Math from \"mathjs\";\nimport Tickable from \"./tickable\";\n\nexport default class Organism extends Tickable {\n\n    constructor({\n                    name,\n                    sta\n                }) {\n        super();\n\n        this.dead = false;\n\n        this.level = 1;\n        this.name = name;\n\n        this.staCurrent = sta;\n        this.staMax = sta;\n\n        this.expCurrent = 0;\n        this.expMax = 20;\n    }\n\n    addExp(\n        exp\n    ) {\n        if (!this.dead) {\n            this.expCurrent += exp;\n            if (this.expCurrent >= this.expMax) {\n                // level up\n                this.expCurrent = 0;\n                this.levelUp();\n            }\n        }\n    }\n\n    levelUp() {\n        this.level++;\n        this.expMax = this.expMax + (50 * Math.log(this.level, 10));\n    }\n\n    exhaust(\n        sta\n    ) {\n        this.staCurrent -= sta;\n\n        if (this.staCurrent < 0) {\n            this.staCurrent = 0\n        }\n    }\n}","import React, {Component} from \"react\";\n// game engine\nimport Player from \"./engine/player\";\nimport Farm from \"./engine/farm\";\n\n// visual components\n// structure\nimport Footer from \"./components/structure/Footer\";\nimport Header from \"./components/structure/Header\";\n\n// game\nimport PlayerComponent from \"./components/Player\"\nimport FarmComponent from \"./components/Farm\";\nimport ItemsComponent from \"./components/Items\";\nimport CraeftersComponent from \"./components/Craefters\";\nimport Weapon from \"./engine/items/weapon\";\nimport Resources from \"./engine/resources\";\nimport {ResourceTypes} from \"./engine/data/types\";\n\nconst version = \"v0.1.0\";\nconst versionMsg = `Welcome to Cräft! version: ${version}`;\n\n/* eslint-disable-next-line no-console */\nconsole.log(versionMsg);\n\nglobal.delay = 2;\n\nexport default class Craeft extends Component {\n\n    gameTick = null;\n\n    state = {\n        logs: [\n            versionMsg\n        ],\n        // the player\n        player: new Player(),\n        // the farm\n        farm: new Farm(),\n        // craefters\n        craefters: [],\n        // items\n        items: [],\n        // resources\n        resources: new Resources({initialResources: 100})\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.farmComplete = this.farmComplete.bind(this);\n        this.farmStart = this.farmStart.bind(this);\n\n        this.addCraefter = this.addCraefter.bind(this);\n        this.addItem = this.addItem.bind(this);\n\n        this.equipItem = this.equipItem.bind(this);\n        this.unEquipItem = this.unEquipItem.bind(this);\n\n        const knife = new Weapon({\n            name: \"Newbie Knife\",\n            material: ResourceTypes.Metal,\n            atk: 1,\n            matk: 1,\n            delay: -1\n        });\n\n        this.state.player.equipment.equip(knife);\n\n        knife.equiped = true;\n\n        this.state.items = [\n            knife\n        ];\n    }\n\n    componentDidMount() {\n        // re-render every second\n        this.gameTick = setInterval(() => {\n            // tick the player\n            this.state.player.tick();\n\n            // tick all craefters\n            for (const craefter of this.state.craefters) {\n                craefter.tick();\n            }\n\n            // todo: tick the items\n\n            // force update of the UI\n            this.forceUpdate();\n        }, 1 * 1000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.gameTick)\n    }\n\n    farmStart(\n        sta\n    ) {\n        this.state.player.exhaust(sta)\n    }\n\n    farmComplete(\n        result\n    ) {\n        const resources = new Resources()\n            .add(this.state.resources)\n            .add(result);\n\n        this.state.player.damage(10);\n        this.state.player.addExp(10);\n\n        this.setState({\n            resources\n        })\n    }\n\n    addCraefter(\n        craefter\n    ) {\n        const craefters = [...this.state.craefters];\n\n        craefters.push(craefter);\n\n        craefter.onDoneCreating = () => {\n            this.state.player.addExp(5);\n        };\n\n        this.setState({\n            craefters\n        })\n    }\n\n    addItem(\n        item,\n        resourcesConsumed,\n        craefter\n    ) {\n        const items = [...this.state.items];\n        const resources = new Resources()\n            .add(this.state.resources)\n            .sub(resourcesConsumed);\n\n        item.onDoneCreating = () => {\n            this.log(`${item.name} cräfted! `);\n            craefter.addExp(5);\n        };\n\n        items.push(item);\n\n        this.setState({\n            items,\n            resources\n        })\n    }\n\n    equipItem(\n        item\n    ) {\n        const equiped = this.state.player.equipment.equip(item);\n\n        if (equiped) {\n            this.log(`${item.name} put on.`);\n\n            item.equiped = equiped;\n\n            let items = [...this.state.items];\n\n            this.setState({\n                items\n            })\n        } else {\n            this.log(\"Equip failed!\")\n        }\n    }\n\n    unEquipItem(\n        item\n    ) {\n        const unequiped = this.state.player.equipment.unequip(item);\n\n        if (unequiped) {\n\n            this.log(`${item.name} taken off.`);\n\n            let items = [...this.state.items];\n            items[items.indexOf(item)].equiped = false;\n\n            this.setState({\n                items\n            })\n        } else {\n            this.log(\"Unequip failed!\")\n        }\n    }\n\n    log(\n        entry\n    ) {\n        const logs = [...this.state.logs];\n\n        logs.push(entry);\n\n        this.setState({\n            logs\n        })\n    }\n\n    render() {\n        return (\n            <div className={`rpgui-content container craeft ${this.state.player.dead ? \"rpgui-disabled\" : \"\"}`}>\n\n                <Header/>\n\n                <PlayerComponent player={this.state.player}\n                                 onUnequip={this.unEquipItem}\n                                 logs={this.state.logs}/>\n\n                <div className=\"craefting-interface columns\">\n\n                    <CraeftersComponent resources={this.state.resources}\n                                        craefters={this.state.craefters}\n                                        craefterAdded={this.addCraefter}\n                                        itemAdded={this.addItem}/>\n\n                    <FarmComponent resources={this.state.resources}\n                                   farm={this.state.farm}\n                                   player={this.state.player}\n                                   farmStart={this.farmStart}\n                                   farmComplete={this.farmComplete}/>\n\n                    <ItemsComponent items={this.state.items}\n                                    onItemEquip={this.equipItem}/>\n\n                </div>\n\n                <Footer/>\n\n            </div>\n        );\n    }\n}\n","import Timer from \"../tools/timer\";\nimport Resources from \"./resources\";\n\nexport default class Farm {\n\n    constructor({\n                    delay = global.delay\n                } = {}) {\n        this.delay = delay;\n        this.timer = new Timer({\n            delay,\n            autoStart: false\n        });\n    }\n\n    farm(\n        callback\n    ) {\n        this.timer.callback = () => {\n\n            this.timer.pause();\n            this.timer = new Timer({\n                delay: this.delay,\n                autoStart: false\n            });\n\n            callback(\n                new Resources({\n                    initialResources: 1\n                })\n            );\n\n        };\n\n        this.timer.start();\n    }\n}","import React, {Component} from \"react\";\n\nexport default class Footer extends Component {\n\n    render() {\n        return (\n            <div className={\"columns footer\"}>\n                <div className={\"column\"}>\n                    donate\n                </div>\n                <div className={\"column\"}>\n                    <a href={\"#about\"}>more info</a>\n                </div>\n            </div>\n        )\n    }\n}","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {ResourceTypes} from \"../engine/data/types\";\n\nexport default class Farm extends Component {\n\n    static propTypes = {\n        player: PropTypes.object,\n        resources: PropTypes.object,\n        farm: PropTypes.object,\n        farmComplete: PropTypes.func,\n        farmStart: PropTypes.func\n    };\n\n    state = {\n        isFarming: false\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.farm = this.farm.bind(this)\n    }\n\n    farm() {\n        if (!this.state.isFarming && this.props.player.staCurrent > 0) {\n\n            this.setState({\n                    isFarming: true\n                },\n                () => {\n                    this.props.farmStart(1);\n                    this.props.farm.farm((result) => {\n                        this.props.farmComplete(result);\n                        this.setState({\n                            isFarming: false\n                        })\n                    });\n                })\n        }\n    }\n\n    render() {\n        return (\n            <div className='farm column frame farm'>\n                <div className='rpgui-container framed'>\n\n                    <div className={\"row\"}>\n                        <strong>Resources:</strong>\n                        <hr/>\n                    </div>\n\n                    <div className='rpgui-container framed-grey resources'>\n\n                        <div className=\"columns\">\n                            <div className=\"column\">\n                                Wood:\n                            </div>\n                            <div className=\"column rtl\">\n                                {this.props.resources[ResourceTypes.Wood]}\n                            </div>\n                        </div>\n\n                        <div className=\"columns\">\n                            <div className=\"column\">\n                                Metal:\n                            </div>\n                            <div className=\"column rtl\">\n                                {this.props.resources[ResourceTypes.Metal]}\n                            </div>\n                        </div>\n\n                        <div className=\"columns\">\n                            <div className=\"column\">\n                                Cloth:\n                            </div>\n                            <div className=\"column rtl\">\n                                {this.props.resources[ResourceTypes.Cloth]}\n                            </div>\n                        </div>\n\n                        <div className=\"columns\">\n                            <div className=\"column\">\n                                Diamond:\n                            </div>\n                            <div className=\"column rtl\">\n                                {this.props.resources[ResourceTypes.Diamond]}\n                            </div>\n                        </div>\n\n                    </div>\n\n                    <div className={\"row\"}>\n                        <button className='rpgui-button'\n                                onClick={this.farm}\n                                disabled={\n                                    this.state.isFarming ||\n                                    this.props.player.staCurrent < 1 ||\n                                    this.props.player.dead\n                                }>\n\n                            <span className=\"icon\">\n                                <i className=\"fas fa-tree\"/>\n                            </span>\n\n                            <span>\n                                &nbsp;\n                                {\n                                    this.state.isFarming ?\n                                        this.props.farm.timer.getTimeoutString() : \"Farm!\"\n                                }\n                            </span>\n\n                        </button>\n                    </div>\n\n                </div>\n\n            </div>\n        )\n    }\n}","import React, {Component} from \"react\";\nimport ItemDescription from \"./ItemDescription\";\nimport ItemIcon from \"./ItemIcon\";\nimport PropTypes from \"prop-types\";\n\nexport default class Items extends Component {\n\n    static propTypes = {\n        items: PropTypes.array,\n        onItemEquip: PropTypes.func\n    };\n\n    state = {\n        selectedItem: null\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.selectItem = this.selectItem.bind(this);\n        this.equip = this.equip.bind(this);\n    }\n\n    selectItem(\n        item\n    ) {\n        if (!item.delay.isDelaying) {\n\n            let i = item;\n            if (this.state.selectedItem === item) {\n                i = null\n            }\n            this.setState({\n                selectedItem: i\n            })\n        }\n    }\n\n    equip(\n        item\n    ) {\n        this.props.onItemEquip(item);\n\n        if (item.equiped) {\n            this.setState({\n                selectedItem: null\n            });\n        }\n\n    }\n\n    render() {\n        return (\n            <div className='items column frame'>\n                <div className='rpgui-container framed'>\n\n                    <div className={\"row\"}>\n                        <strong>Items:</strong>\n                        <hr/>\n                    </div>\n\n                    {\n                        this.state.selectedItem && !this.state.selectedItem.equiped ?\n\n                            <div className='rpgui-container framed-grey item row'>\n                                <ItemDescription item={this.state.selectedItem}\n                                                 onEquip={this.equip}/>\n                            </div> : null\n                    }\n\n                    <div className='item-list'>\n                        {\n                            this.props.items.filter((item) => {\n                                return !item.equiped\n                            }).length > 0 ?\n                                this.props.items\n                                    .filter((item) => {\n                                        return !item.equiped\n                                    })\n                                    .map((item, index) => {\n                                        return (\n                                            <ItemIcon key={index} item={item}\n                                                      isSelected={item === this.state.selectedItem}\n                                                      isSmall={false} onItemSelected={this.selectItem}/>\n                                        )\n                                    }) : <div className='row'>go Cräft!</div>\n                        }\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class Farm extends Component {\n\n    static propTypes = {\n        min: PropTypes.number,\n        max: PropTypes.number,\n        step: PropTypes.number,\n        defaultValue: PropTypes.number,\n        onValueChange: PropTypes.func\n    };\n\n    state = {\n        value: 0,\n        mouseDown: false\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state.value = this.props.defaultValue || 0;\n\n        this.element = React.createRef();\n        this.track = React.createRef();\n\n        // pretty edgy\n        this.leftEdge = React.createRef();\n        this.rightEdge = React.createRef();\n\n        this.setValue = this.setValue.bind(this);\n        this.move = this.move.bind(this);\n        this.slideTo = this.slideTo.bind(this);\n    }\n\n    setValue(\n        value\n    ) {\n        this.setState({\n            value\n        });\n\n        this.props.onValueChange(value)\n    }\n\n    slideTo(\n        pos\n    ) {\n        const stepWidth = (pos / (this.track.current.offsetWidth));\n        const v = Math.round(\n            stepWidth * (this.props.max - this.props.min)\n        );\n        const value = this.props.min + v;\n\n        this.setValue(value);\n    }\n\n    move(\n        pos\n    ) {\n        if (this.state.mouseDown) {\n            this.slideTo(pos)\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener(\n            \"mouseup\",\n            () => this.setState({\n                mouseDown: false\n            }),\n            false\n        );\n    }\n\n    render() {\n        const edgeWidth = !this.leftEdge.current ? 20 : this.leftEdge.current.offsetWidth;\n        const trackWith = !this.track.current ? 20 : this.track.current.offsetWidth;\n\n        const step = (trackWith - (edgeWidth * 2)) / (this.props.max - this.props.min);\n\n        const stepWidth = this.state.value * step;\n\n        const left = Math.floor((edgeWidth / 2) + stepWidth) + \"px\";\n\n        return (\n            <div ref={this.element}>\n\n                <input type='range' style={{display: \"none\"}}\n                       min={this.props.min} max={this.props.max} step={this.props.step}\n                       value={this.state.value}\n                       onChange={(event) => this.setValue(event.target.value)}/>\n\n                <div className='rpgui-slider-container'>\n\n                    <div className='rpgui-slider-track'\n                         ref={this.track}\n                         onMouseDown={() => this.setState({mouseDown: true})}\n                         onMouseUp={() => this.setState({mouseDown: false})}\n                         onMouseMove={(e) => this.move(e.nativeEvent.offsetX || e.nativeEvent.layerX)}\n                         onClick={(e) => this.slideTo(e.nativeEvent.offsetX || e.nativeEvent.layerX)}>\n                    </div>\n\n                    <div className='rpgui-slider-left-edge'\n                         ref={this.leftEdge}\n                         onMouseDown={() => this.setState({mouseDown: true})}\n                         onClick={() => this.setValue(this.props.min)}>\n                        <div className='slider-edge-value'>{this.props.min}</div>\n                    </div>\n\n                    <div className='rpgui-slider-right-edge'\n                         ref={this.rightEdge}\n                         onMouseDown={() => this.setState({mouseDown: true})}\n                         onClick={() => this.setValue(this.props.max)}>\n                        <div className='slider-edge-value rtl'>{this.props.max}</div>\n                    </div>\n\n                    <div className='rpgui-slider-thumb'\n                         onMouseDown={() => this.setState({mouseDown: true})}\n                         style={{\n                             left\n                         }}>\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}\n","import {\n    Unknown,\n    CraefterTypes,\n    WeaponTypes,\n    ArmorTypes,\n    ArmorSlots\n} from \"./types\";\n\nconst CraefterTypeNames = Object.freeze({\n    [Unknown]: \"???\",\n    [CraefterTypes.Weaponsmith]: \"Weaponsmith\",\n    [CraefterTypes.Armorsmith]: \"Armorsmith\",\n    [CraefterTypes.Jewelcraefter]: \"Jewelcräfter\",\n    [CraefterTypes.Alchemist]: \"Alchemist\"\n});\n\nconst ItemNames = Object.freeze({\n    [Unknown]: \"???\",\n    [WeaponTypes.Sword]: \"Sword\",\n    [WeaponTypes.JewelSword]: \"Jewel Sword\",\n    [WeaponTypes.Knife]: \"Knife\",\n    [WeaponTypes.JewelKnife]: \"Jewel Knife\",\n    [WeaponTypes.Staff]: \"Staff\",\n    [WeaponTypes.Wand]: \"Wand\",\n    [WeaponTypes.JewelWand]: \"Jewel Wand\",\n    [ArmorTypes.WoodenPlate]: \"Wooden Plate\",\n    [ArmorTypes.WoodenChainmail]: \"Wooden Chainmail\",\n    [ArmorTypes.MetalPlate]: \"Metal Plate\",\n    [ArmorTypes.MetalChainmail]: \"Metal Chainmail\",\n    [ArmorTypes.Woven]: \"Woven\",\n    [ArmorTypes.JewelWoven]: \"Jewel Woven\"\n});\n\nconst SlotNames = Object.freeze({\n    [ArmorSlots.Head]: \"Head\",\n    [ArmorSlots.Body]: \"Body\",\n    [ArmorSlots.Legs]: \"Legs\",\n    [ArmorSlots.Feet]: \"Feet\",\n});\n\nexport {\n    CraefterTypeNames,\n    ItemNames,\n    SlotNames\n};\n","import React, {Component} from \"react\";\nimport Gauge from \"./Gauge\";\nimport {CraefterTypeNames} from \"../engine/data/names\";\nimport PropTypes from \"prop-types\";\n\nexport default class CraefterDescription extends Component {\n\n    static propTypes = {\n        craefter: PropTypes.object,\n    };\n\n    render() {\n        return (\n            <div>\n\n                <div>\n                    {\n                        CraefterTypeNames[this.props.craefter.type]\n                    }\n                </div>\n\n                {\n                    !this.props.craefter.delay.isDelaying ?\n                        <div>\n                            Level {this.props.craefter.level}: {this.props.craefter.name}\n                        </div>\n                        : \"???\"\n                }\n\n                {\n                    !this.props.craefter.delay.isDelaying ?\n                        <div>\n\n                            <div className='row'>\n\n                                <div>\n                                    <span className='nowrap'>Str: {this.props.craefter.str} </span>\n                                    <span className='nowrap'>Dex: {this.props.craefter.dex} </span>\n                                </div>\n\n                                <div>\n                                    <span className='nowrap'>Int: {this.props.craefter.int} </span>\n                                    <span className='nowrap'>Luk: {this.props.craefter.luk} </span>\n                                </div>\n\n                            </div>\n\n                            <hr/>\n\n                            <div className='row'>\n\n                                <Gauge label='STA' color='green'\n                                       current={this.props.craefter.staCurrent}\n                                       max={this.props.craefter.staMax}/>\n\n\n                                <Gauge label='EXP'\n                                       current={this.props.craefter.expCurrent}\n                                       max={this.props.craefter.expMax}/>\n\n                            </div>\n\n                            <hr/>\n\n                        </div>\n                        : null\n                }\n\n            </div>\n        )\n    }\n}","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {ItemNames} from \"../engine/data/names\";\nimport ItemStats from \"./ItemStats\";\nimport ItemIcon from \"./ItemIcon\";\n\nexport default class PreItemDescription extends Component {\n\n    static propTypes = {\n        preItem: PropTypes.object\n    };\n\n    render() {\n        return (\n            <div className='rpgui-container framed-grey item columns'>\n\n                <ItemIcon item={this.props.preItem}/>\n\n                <div className={\"column item-description\"}>\n\n                    <div className={\"row\"}>\n                        Type: {ItemNames[this.props.preItem.type]}\n                    </div>\n\n                    <ItemStats item={this.props.preItem}/>\n\n                </div>\n\n            </div>\n        )\n    }\n}","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Slider from \"./Slider\";\nimport CraefterDescription from \"./CraefterDescription\";\nimport PreItemDescription from \"./PreItemDescription\";\nimport {ResourceTypes} from \"../engine/data/types\";\nimport Resources from \"../engine/resources\";\n\nexport default class CraeftWindow extends Component {\n\n    static propTypes = {\n        craefter: PropTypes.object,\n        resources: PropTypes.object,\n        itemAdded: PropTypes.func,\n    };\n\n    state = {\n        resources: new Resources({\n            initialResources: 0\n        }),\n        preItem: null\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.updateResource = this.updateResource.bind(this);\n        this.craeft = this.craeft.bind(this);\n    }\n\n    updateResource(\n        which,\n        value\n    ) {\n        const resources = new Resources()\n            .add(this.state.resources);\n\n        // update resources\n        resources[which] = value;\n\n        this.setState({\n            resources\n        }, () => {\n\n            // re evaluate the item\n            const preItem = this.props.craefter.evaluateItem({\n                resources: this.state.resources\n            });\n\n            this.setState({\n                preItem\n            })\n        });\n    }\n\n    craeft() {\n\n        // cräft the item\n        const item = this.props.craefter.craeft({\n            resources: this.state.resources\n        });\n\n        this.props.itemAdded(\n            item,\n            this.state.resources\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <div className='rpgui-container framed craeft-window'>\n\n                    <div className={\"row\"}>\n                        <strong>Cräft!</strong>\n                        <hr/>\n                    </div>\n\n                    <CraefterDescription craefter={this.props.craefter}/>\n\n                    <div className={\"row\"}>\n\n                        {\n                            this.props.resources[ResourceTypes.Wood] > 0 ?\n                                <div>\n\n                                    {this.state.resources[ResourceTypes.Wood]} x Wood:\n\n                                    <Slider step={1} min={0}\n                                            max={this.props.resources[ResourceTypes.Wood]}\n                                            defaultValue={this.state.resources[ResourceTypes.Wood]}\n                                            onValueChange={(value) => this.updateResource(\n                                                ResourceTypes.Wood,\n                                                value\n                                            )}/>\n\n                                </div> : null\n                        }\n\n                        {\n                            this.props.resources[ResourceTypes.Metal] > 0 ?\n                                <div>\n\n                                    {this.state.resources[ResourceTypes.Metal]} x Metal:\n\n                                    <Slider step={1} min={0}\n                                            max={this.props.resources[ResourceTypes.Metal]}\n                                            defaultValue={this.state.resources[ResourceTypes.Metal]}\n                                            onValueChange={(value) => this.updateResource(\n                                                ResourceTypes.Metal,\n                                                value\n                                            )}/>\n\n                                </div> : null\n                        }\n\n                        {\n                            this.props.resources[ResourceTypes.Cloth] > 0 ?\n                                <div>\n\n                                    {this.state.resources[ResourceTypes.Cloth]} x Cloth:\n\n                                    <Slider step={1} min={0}\n                                            max={this.props.resources[ResourceTypes.Cloth]}\n                                            defaultValue={this.state.resources[ResourceTypes.Cloth]}\n                                            onValueChange={(value) => this.updateResource(\n                                                ResourceTypes.Cloth,\n                                                value\n                                            )}/>\n\n                                </div> : null\n                        }\n\n                        {\n                            this.props.resources[ResourceTypes.Diamond] > 0 ?\n                                <div>\n                                    {this.state.resources[ResourceTypes.Diamond]} x Diamond:\n                                    <Slider step={1} min={0}\n                                            max={this.props.resources[ResourceTypes.Diamond]}\n                                            defaultValue={this.state.resources[ResourceTypes.Diamond]}\n                                            onValueChange={(value) => this.updateResource(\n                                                ResourceTypes.Diamond,\n                                                value\n                                            )}/>\n                                </div> : null\n                        }\n\n                    </div>\n\n                    {\n                        this.state.preItem ?\n                            <PreItemDescription preItem={this.state.preItem}/>\n                            : null\n                    }\n\n                    <div className='row'>\n                        <button onClick={this.craeft}\n                                className='rpgui-button is-big'>\n                            <span>Cräft!</span>\n                        </button>\n                    </div>\n\n                </div>\n            </div>\n        );\n    }\n}\n","import Weapon from \"../items/weapon\";\nimport Craefter from \"./craefter\";\n\nimport {\n    Unknown,\n    ItemCategories,\n    WeaponTypes,\n    CraefterTypes,\n    ResourceTypes\n} from \"../data/types\";\n\nimport {\n    getRandomInt\n} from \"../../tools/rand\";\nimport {\n    ItemNames\n} from \"../data/names\";\nimport Math from \"mathjs\";\n\nexport default class Weaponsmith extends Craefter {\n    constructor({\n                    name,\n                    str = 9,\n                    int = 3,\n                    dex = 5,\n                    luk = 6\n                } = {}) {\n        super({\n            type: CraefterTypes.Weaponsmith,\n            name,\n            str,\n            int,\n            dex,\n            luk\n        });\n    }\n\n    itemCanBeTwoHanded(\n        type\n    ) {\n        return !(\n            type === WeaponTypes.Knife ||\n            type === WeaponTypes.JewelKnife ||\n            type === WeaponTypes.Wand ||\n            type === WeaponTypes.JewelWand\n        );\n    }\n\n    evaluateItemType(\n        ratios,\n        highestResource\n    ) {\n        let type = Unknown;\n\n        switch (highestResource) {\n            case ResourceTypes.Metal:\n                type = WeaponTypes.Sword;\n\n                if (ratios[ResourceTypes.Wood] > 0) {\n                    type = WeaponTypes.Knife;\n\n                    if (ratios[ResourceTypes.Metal] > ratios[ResourceTypes.Wood] * 2) {\n                        type = WeaponTypes.Sword;\n                    }\n                }\n                break;\n            case ResourceTypes.Wood:\n                type = WeaponTypes.Staff;\n\n                if (ratios[ResourceTypes.Diamond] > 0) {\n                    type = WeaponTypes.Wand;\n                }\n                break;\n            case ResourceTypes.Diamond:\n                if (ratios[ResourceTypes.Wood] > 0 &&\n                    ratios[ResourceTypes.Wood] > ratios[ResourceTypes.Metal] * 2 &&\n                    ratios[ResourceTypes.Diamond] > ratios[ResourceTypes.Wood] * 2) {\n                    type = WeaponTypes.JewelWand\n                }\n\n                if (ratios[ResourceTypes.Metal] > 0 &&\n                    ratios[ResourceTypes.Wood] > 0 &&\n                    ratios[ResourceTypes.Diamond] > ratios[ResourceTypes.Metal] + ratios[ResourceTypes.Wood]) {\n                    type = WeaponTypes.JewelKnife\n                }\n\n                if (ratios[ResourceTypes.Metal] > 0 &&\n                    ratios[ResourceTypes.Diamond] > ratios[ResourceTypes.Metal] * 2) {\n                    if (ratios[ResourceTypes.Metal] > ratios[ResourceTypes.Wood] * 2) {\n                        type = WeaponTypes.JewelSword;\n                    }\n                }\n\n                break;\n            default:\n                break\n        }\n\n        return type;\n    }\n\n    evaluateItem({\n                     resources\n                 }) {\n\n        // 2 percent of all resources is the base\n        const baseline = (resources.sum() / 100);\n\n        // add atk mainly based on metal\n        // todo add str influence\n        const atk = Math.round(\n            baseline + Craefter.calculateMaterialImpact(resources[ResourceTypes.Metal])\n        );\n\n        // add matk mainly based on wood\n        // todo add int influence\n        const matk = Math.round(\n            baseline + Craefter.calculateMaterialImpact(resources[ResourceTypes.Wood])\n        );\n\n        // todo: add level influence\n\n        const ratios = resources.ratios();\n        const highestResource = ratios.getHighest();\n\n        return {\n            category: ItemCategories.Weapon,\n            type: this.evaluateItemType(\n                ratios,\n                highestResource\n            ),\n            material: highestResource,\n            atk,\n            // todo: let this be influenced by luk\n            atkMax: Math.round(atk + (atk * Math.log(2))) || 1,\n            matk,\n            // todo: let this be influenced by luk\n            matkMax: Math.round(matk + (matk * Math.log(2))) || 1\n        }\n    }\n\n    evaluateItemName(\n        type,\n        /* eslint-disable-next-line no-unused-vars */\n        slot,\n        isMultiSlot\n    ) {\n        const prefixes = [];\n\n        if (this.itemCanBeTwoHanded(type)) {\n            prefixes.push(isMultiSlot ? \"Two-Handed\" : \"One-Handed\");\n        }\n\n        const parts = [];\n\n        parts.push(...prefixes);\n        parts.push(ItemNames[type]);\n\n        return parts.join(\" \")\n    }\n\n    craeft(\n        resources\n    ) {\n        // todo include resource heaviness / complexity\n        this.exhaust(1);\n\n        const {\n            type,\n            material,\n            atk,\n            atkMax,\n            matk,\n            matkMax\n        } = this.evaluateItem(resources);\n\n        // is this item two handed?\n        const isMultiSlot = this.itemCanBeTwoHanded(type) && getRandomInt(0, 1) > 0;\n\n        const item = new Weapon({\n            type,\n            isMultiSlot,\n            material,\n            level: this.level,\n            name: this.evaluateItemName(type, null, isMultiSlot),\n            // todo include luk\n            atk: getRandomInt(atk, atkMax),\n            matk: getRandomInt(matk, matkMax)\n        });\n\n        return item;\n    }\n}\n","import Item from \"./item\";\nimport {getRandomInt} from \"../../tools/rand\";\nimport {\n    Unknown,\n    ItemCategories\n} from \"../data/types\";\n\nimport names from \"../data/armor_names\"\n\nexport default class Armor extends Item {\n\n    constructor({\n                    type = Unknown,\n                    slot = Unknown,\n                    name = names[getRandomInt(0, names.length)],\n                    level,\n                    def = 0,\n                    mdef = 0,\n                    material,\n                    delay\n                } = {}) {\n        super({\n            category: ItemCategories.Armor,\n            type,\n            slot,\n            level,\n            name,\n            material,\n            delay\n        });\n\n        this.def = def;\n        this.mdef = mdef;\n    }\n}\n","import Armor from \"../items/armor\";\nimport Craefter from \"./craefter\";\nimport {\n    Unknown,\n    CraefterTypes,\n    ItemCategories,\n    ArmorTypes,\n    ArmorSlots,\n    ResourceTypes\n} from \"../data/types\";\nimport {\n    getRandomInt,\n    getRandomObjectEntry\n} from \"../../tools/rand\";\nimport {\n    ItemNames,\n    SlotNames\n} from \"../data/names\";\n\nexport default class Armorsmith extends Craefter {\n\n    constructor({\n                    name,\n                    str = 4,\n                    dex = 3,\n                    luk = 9\n                } = {}) {\n        super({\n            type: CraefterTypes.Armorsmith,\n            name,\n            luk,\n            dex,\n            str\n        });\n    }\n\n    evaluateItemType(\n        ratios,\n        highestResource\n    ) {\n        let type = Unknown;\n\n        switch (highestResource) {\n            case ResourceTypes.Metal:\n                type = ArmorTypes.MetalPlate;\n\n                if (ratios[ResourceTypes.Cloth] > 0) {\n                    type = ArmorTypes.MetalChainmail;\n                }\n                break;\n            case ResourceTypes.Wood:\n                type = ArmorTypes.WoodenPlate;\n\n                if (ratios[ResourceTypes.Cloth] > 0) {\n                    type = ArmorTypes.WoodenChainmail;\n                }\n                break;\n            case ResourceTypes.Cloth:\n                type = ArmorTypes.Woven;\n\n                if (ratios[ResourceTypes.Diamond] > 0) {\n                    type = ArmorTypes.JewelWoven;\n                }\n                break;\n            default:\n                break\n        }\n\n        return type;\n    }\n\n    evaluateItem({\n                     resources\n                 }) {\n\n        // 2 percent of all resources is the base\n        const baseline = (resources.sum() / 100);\n\n        // add atk mainly based on metal\n        // todo add str influence\n        const def = Math.round(\n            baseline + Craefter.calculateMaterialImpact(resources[ResourceTypes.Metal])\n        );\n\n        // add matk mainly based on wood\n        // todo add int influence\n        const mdef = Math.round(\n            baseline + Craefter.calculateMaterialImpact(resources[ResourceTypes.Wood])\n        );\n\n        const ratios = resources.ratios();\n        const highestResource = ratios.getHighest();\n\n        // todo: add level influence\n        return {\n            category: ItemCategories.Armor,\n            type: this.evaluateItemType(\n                ratios,\n                highestResource\n            ),\n            material: highestResource,\n            def,\n            defMax: Math.round(def + (def * Math.log(2))) || 1,\n            mdef,\n            mdefMax: Math.round(mdef + (mdef * Math.log(2))) || 1\n        }\n    }\n\n    evaluateItemName(\n        type,\n        slot,\n        /* eslint-disable-next-line no-unused-vars */\n        isMultiSlot\n    ) {\n        return `${SlotNames[slot]} ${ItemNames[type]}`\n    }\n\n    evaluateSlot(\n        /* eslint-disable-next-line no-unused-vars */\n        type\n    ) {\n        return getRandomObjectEntry({\n            object: ArmorSlots,\n            start: 1\n        });\n    }\n\n    craeft(\n        resources\n    ) {\n        const {\n            type,\n            material,\n            def,\n            defMax,\n            mdef,\n            mdefMax\n        } = this.evaluateItem(resources);\n\n        const slot = this.evaluateSlot(type);\n\n        const item = new Armor({\n            name: this.evaluateItemName(\n                type,\n                slot\n            ),\n            slot,\n            material,\n            def: getRandomInt(def, defMax),\n            mdef: getRandomInt(mdef, mdefMax)\n        });\n\n        return item;\n    }\n}\n","import React, {Component} from \"react\";\nimport Weaoponsmith from \"../engine/craefter/weaponsmith\";\nimport Armorsmith from \"../engine/craefter/armorsmith\";\nimport PropTypes from \"prop-types\";\n\nexport default class CraefterWindow extends Component {\n\n    static propTypes = {\n        addCraefter: PropTypes.func\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.addWS = this.addWS.bind(this);\n        this.addAS = this.addAS.bind(this);\n    }\n\n    addWS() {\n        this.props.addCraefter(new Weaoponsmith())\n    }\n\n    addAS() {\n        this.props.addCraefter(new Armorsmith())\n    }\n\n\n    render() {\n\n        const style = {\n            verticalAlign: \"top\",\n            minWidth: \"250px\"\n        };\n\n        return (\n            <div className='rpgui-container framed craefter-window'>\n\n                <div className={\"row\"}>\n                    <strong>Add Cräfter</strong>\n                    <hr/>\n                </div>\n\n                <div className={\"row\"}>\n\n                    <div>\n                        <span className='rpgui-icon weapon-slot'/>\n                        <button onClick={this.addWS}\n                                className='rpgui-button is-huge'\n                                style={style}>\n                            <span>Weaponsmith</span>\n                        </button>\n                    </div>\n\n                    <div>\n                        <span className='rpgui-icon armor-slot'/>\n                        <button onClick={this.addAS}\n                                className='rpgui-button is-big'\n                                style={style}>\n                            <span>Armorsmith</span>\n                        </button>\n                    </div>\n\n                    <div className='rpgui-disabled'>\n                        <span className='rpgui-icon ring-slot'/>\n                        <button className='rpgui-button is-big'\n                                style={style}>\n                            <span>Jewelcräfter</span>\n                        </button>\n                    </div>\n\n                    <div className='rpgui-disabled'>\n                        <span className='rpgui-icon potion-slot'/>\n                        <button className='rpgui-button is-big'\n                                style={style}>\n                            <span>Alchemist</span>\n                        </button>\n                    </div>\n\n                </div>\n\n            </div>\n        );\n    }\n}\n","import React, {Component} from \"react\";\nimport CraefterDescription from \"./CraefterDescription\";\nimport PropTypes from \"prop-types\";\n\nexport default class Craefter extends Component {\n\n    static propTypes = {\n        craefter: PropTypes.object,\n        openCraeftDialog: PropTypes.func,\n        canCraeft: PropTypes.bool\n    };\n\n    render() {\n\n        const classNames = [\n            \"rpgui-container\",\n            \"framed-grey\",\n            \"craefter\",\n            \"row\"\n        ];\n\n        if (this.props.craefter.dead) {\n            classNames.push(\"rpgui-disabled\")\n        }\n\n        return (\n            <div className={classNames.join(\" \")}>\n\n                <CraefterDescription craefter={this.props.craefter}/>\n\n                <div className={\"row\"}>\n                    <button onClick={() => this.props.openCraeftDialog(this.props.craefter)}\n                            className='rpgui-button'\n                            disabled={\n                                !this.props.canCraeft ||\n                                this.props.craefter.delay.isDelaying ||\n                                this.props.craefter.dead\n                            }>\n\n                        <span className=\"icon\">\n                            <i className=\"fas fa-hammer\"/>\n                        </span>\n\n                        <span>\n                            &nbsp;\n                            {\n                                this.props.craefter.delay.isDelaying ?\n                                    this.props.craefter.delay.timer.getTimeoutString() : \"Cräft!\"\n                            }\n                        </span>\n\n                    </button>\n                </div>\n\n            </div>\n        )\n    }\n}","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport CraeftWindow from \"./CraeftWindow\";\nimport CraefterWindow from \"./CraefterWindow\";\nimport Craefter from \"./Craefter\";\nimport {ResourceTypes} from \"../engine/data/types\";\n\nexport default class Craefters extends Component {\n\n    static propTypes = {\n        craefters: PropTypes.array,\n        resources: PropTypes.object,\n        itemAdded: PropTypes.func,\n        craefterAdded: PropTypes.func\n    };\n\n    state = {\n        // is the craft dialog showing?\n        isCraefting: false,\n        // is the add craefter dialog showing?\n        isAddingCraefter: false,\n        // currently selected craefter\n        currentCraefter: null,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.openCraeftDialog = this.openCraeftDialog.bind(this);\n        this.openCraefterDialog = this.openCraefterDialog.bind(this);\n\n        this.addCraefter = this.addCraefter.bind(this);\n        this.addItem = this.addItem.bind(this);\n\n        this.hasEnoughResources = this.hasEnoughResources.bind(this);\n    }\n\n    hasEnoughResources() {\n        return (\n            this.props.resources[ResourceTypes.Wood] > 0 ||\n            this.props.resources[ResourceTypes.Metal] > 0 ||\n            this.props.resources[ResourceTypes.Cloth] > 0 ||\n            this.props.resources[ResourceTypes.Diamond] > 0\n        );\n    }\n\n    openCraefterDialog() {\n        this.setState({\n            isAddingCraefter: true\n        })\n    }\n\n    openCraeftDialog(craefter) {\n\n        this.setState({\n            isCraefting: true,\n            currentCraefter: craefter\n        });\n    }\n\n    addCraefter(craefter) {\n        this.props.craefterAdded(craefter);\n        this.setState({\n            isAddingCraefter: false\n        })\n    }\n\n    addItem(\n        item,\n        resourcesConsumed\n    ) {\n        this.props.itemAdded(\n            item,\n            resourcesConsumed,\n            this.state.currentCraefter\n        );\n\n        this.setState({\n            isCraefting: false\n        })\n    }\n\n    render() {\n        return (\n            <div className='craefters column frame'>\n                <div className='rpgui-container framed'>\n\n                    {\n                        this.state.isCraefting ?\n                            <div className={`modal ${this.state.isCraefting ? \"is-active\" : \"\"}`}>\n                                <div className=\"modal-background\"/>\n                                <div className=\"modal-content\">\n\n                                    {\n                                        this.state.isCraefting ?\n                                            <CraeftWindow resources={this.props.resources}\n                                                          craefter={this.state.currentCraefter}\n                                                          itemAdded={this.addItem}/> : null\n                                    }\n\n                                </div>\n                                <button className=\"modal-close is-large\"\n                                        onClick={() => this.setState({\n                                            isCraefting: false\n                                        })}\n                                        aria-label=\"close\">\n                                </button>\n                            </div> : null\n                    }\n\n                    {\n                        this.state.isAddingCraefter ?\n                            <div className={`modal ${this.state.isAddingCraefter ? \"is-active\" : \"\"}`}>\n                                <div className=\"modal-background\"></div>\n                                <div className=\"modal-content\">\n                                    <CraefterWindow addCraefter={this.addCraefter}/>\n                                </div>\n                                <button className=\"modal-close is-large\"\n                                        onClick={() => this.setState({\n                                            isAddingCraefter: false\n                                        })}\n                                        aria-label=\"close\">\n                                </button>\n                            </div> : null\n                    }\n\n                    <div className={\"row\"}>\n                        <strong>Cräfters:</strong>\n                        <hr/>\n                    </div>\n\n                    <div className={\"row\"}>\n                        <button onClick={this.openCraefterDialog}\n                                className='rpgui-button is-small'>\n                                <span className=\"icon\">\n                                    <i className=\"fas fa-plus\"></i>\n                                </span>\n                            <span>\n                                &nbsp;Add Cräfter\n                            </span>\n                        </button>\n                    </div>\n\n                    <div className='craefters-list'>\n                        {\n                            this.props.craefters.map((craefter, index) => {\n                                return (\n                                    <Craefter key={index} craefter={craefter}\n                                              openCraeftDialog={this.openCraeftDialog}\n                                              canCraeft={this.hasEnoughResources()}/>\n                                )\n                            })\n                        }\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}","import {\n    ArmorSlots,\n    WeaponSlots,\n    JewelerySlots, ItemCategories\n} from \"./data/types\";\n\nexport default class Equipment {\n\n    [ArmorSlots.Head] = null;\n    [ArmorSlots.Body] = null;\n    [ArmorSlots.Legs] = null;\n    [ArmorSlots.Feet] = null;\n    [WeaponSlots.LeftHand] = null;\n    [WeaponSlots.RightHand] = null;\n    [JewelerySlots.Left] = null;\n    [JewelerySlots.Right] = null;\n\n    findSlotByItem(item) {\n\n        const symbolSlots = Object.getOwnPropertySymbols(this);\n\n        for (const slot of symbolSlots) {\n            if (this[slot] === item) {\n                return slot;\n            }\n        }\n\n    }\n\n    getEquiped() {\n        const equiped = [];\n\n        for (const equipmentSymbol of Object.getOwnPropertySymbols(this)) {\n            const equipment = this[equipmentSymbol];\n            if (equipment && equiped.indexOf(equipment) < 0) {\n                equiped.push(equipment);\n            }\n        }\n\n        return equiped;\n    }\n\n    equip(\n        item\n    ) {\n        let equiped = false;\n\n        if (item.category === ItemCategories.Weapon) {\n            // we have a weapon, try to assign to hand\n            if (item.isMultiSlot) {\n                if (this[WeaponSlots.RightHand] === null &&\n                    this[WeaponSlots.LeftHand] === null) {\n                    this[WeaponSlots.RightHand] = item;\n                    this[WeaponSlots.LeftHand] = item;\n                    equiped = true;\n                }\n            } else {\n                if (this[WeaponSlots.RightHand] === null) {\n                    this[WeaponSlots.RightHand] = item;\n                    equiped = true;\n                } else if (this[WeaponSlots.LeftHand] === null) {\n                    this[WeaponSlots.LeftHand] = item;\n                    equiped = true;\n                }\n            }\n        } else if (item.category === ItemCategories.Armor) {\n            const {slot} = item;\n            if (this[slot] === null) {\n                this[slot] = item;\n                equiped = true;\n            }\n        } else if (item.category === ItemCategories.Jewelery) {\n            // we have a jewelery, try to assign to hand\n            if (this[JewelerySlots.Right] === null) {\n                this[JewelerySlots.Right] = item;\n                equiped = true;\n            } else if (this[JewelerySlots.Left] === null) {\n                this[JewelerySlots.Left] = item;\n                equiped = true;\n            }\n        }\n\n        return equiped;\n    }\n\n    unequip(\n        item\n    ) {\n        this[this.findSlotByItem(item)] = null;\n        this[this.findSlotByItem(item)] = null;\n\n        return true\n    }\n\n}","import Math from \"mathjs\";\nimport peopleNames from \"./data/people_names\"\nimport {getRandomArrayItem} from \"../tools/rand\";\nimport Organism from \"./organism\";\nimport Equipment from \"./equipment\";\n\nexport default class Player extends Organism {\n\n    equipment = new Equipment();\n\n    constructor({\n                    name = getRandomArrayItem({\n                        array: peopleNames\n                    }),\n                    // stats\n                    hp = 50,\n                    sta = 25,\n                    // attributes\n                    str = 10,\n                    int = 7,\n                    dex = 2,\n                    luk = 1,\n                    vit = 2\n                } = {}) {\n        super({\n            name,\n            sta\n        });\n\n        this.luk = luk;\n        this.dex = dex;\n        this.str = str;\n        this.int = int;\n        this.vit = vit;\n\n        this.hpCurrent = hp;\n        this.hpMax = hp;\n\n        this.class = \"Novice\"\n    }\n\n    tick() {\n        // regenerate stamina\n        if (this.staCurrent < this.staMax) {\n            this.staCurrent += 0.1;\n        }\n\n        // regenerate hp\n        if (this.hpCurrent < this.hpMax) {\n            this.hpCurrent += (0.1 * this.vit);\n        }\n    }\n\n    atk() {\n        let atk = 0;\n\n        for (const equipment of this.equipment.getEquiped()) {\n            if (equipment.atk) {\n                atk += equipment.atk * this.str;\n            }\n        }\n\n        return atk;\n    }\n\n    matk() {\n        let matk = 0;\n\n        for (const equipment of this.equipment.getEquiped()) {\n            if (equipment.matk) {\n                matk += equipment.matk * this.int;\n            }\n        }\n\n        return matk;\n    }\n\n    def() {\n        let def = 0;\n\n        for (const equipment of this.equipment.getEquiped()) {\n            if (equipment.def) {\n                def += equipment.def * this.vit;\n            }\n        }\n\n        return def;\n    }\n\n    mdef() {\n        let mdef = 0;\n\n        for (const equipment of this.equipment.getEquiped()) {\n            if (equipment.mdef) {\n                mdef += equipment.mdef * this.int;\n            }\n        }\n\n        return mdef;\n    }\n\n    levelUp() {\n        super.levelUp();\n\n        this.hpMax = this.hpMax + (50 * Math.log(this.level, 10));\n        this.hpCurrent = this.hpMax;\n    }\n\n    damage(\n        dmg\n    ) {\n        this.hpCurrent -= dmg;\n\n        if (Math.floor(this.hpCurrent) <= 0) {\n            // killed\n            this.hpCurrent = 0;\n            this.dead = true;\n        }\n    }\n\n}","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport ItemDescription from \"./ItemDescription\";\nimport ItemIcon from \"./ItemIcon\";\nimport {\n    ArmorSlots,\n    WeaponSlots\n} from \"../engine/data/types\";\n\nexport default class Equipment extends Component {\n\n    static propTypes = {\n        onUnequip: PropTypes.func,\n        equipment: PropTypes.object\n    };\n\n    state = {\n        selectedItem: null\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.selectItem = this.selectItem.bind(this);\n        this.unequip = this.unequip.bind(this);\n    }\n\n    selectItem(\n        item\n    ) {\n        this.setState({\n            selectedItem: this.state.selectedItem === item ? null : item\n        })\n    }\n\n    unequip(\n        item\n    ) {\n        this.setState({\n            selectedItem: null\n        });\n\n        this.props.onUnequip(item);\n    }\n\n    render() {\n        return (\n            <div className='rpgui-container framed-grey row equipment'>\n\n                <div>\n                    <strong>Equipment:</strong>\n                </div>\n\n                <hr/>\n\n                <div className='columns'>\n                    <div className='column'>\n                        Head:<br/>\n                        {\n                            this.props.equipment[ArmorSlots.Head] ?\n                                <ItemIcon item={this.props.equipment[ArmorSlots.Head]}\n                                          isSelected={this.props.equipment[ArmorSlots.Head] === this.state.selectedItem}\n                                          isSmall={true} onItemSelected={this.selectItem}/>\n                                : <span className=\"rpgui-icon armor-slot\"/>\n                        }\n                    </div>\n                    <div className='column'>\n                        Body:<br/>\n                        {\n                            this.props.equipment[ArmorSlots.Body] ?\n                                <ItemIcon item={this.props.equipment[ArmorSlots.Body]}\n                                          isSelected={this.props.equipment[ArmorSlots.Body] === this.state.selectedItem}\n                                          isSmall={true} onItemSelected={this.selectItem}/>\n                                : <span className=\"rpgui-icon armor-slot\"/>\n                        }\n                    </div>\n                </div>\n\n                <div className='columns'>\n                    <div className='column'>\n                        Legs:<br/>\n                        {\n                            this.props.equipment[ArmorSlots.Legs] ?\n                                <ItemIcon item={this.props.equipment[ArmorSlots.Legs]}\n                                          isSelected={this.props.equipment[ArmorSlots.Legs] === this.state.selectedItem}\n                                          isSmall={true} onItemSelected={this.selectItem}/>\n                                : <span className=\"rpgui-icon armor-slot\"/>\n                        }\n                    </div>\n                    <div className='column'>\n                        Feet:<br/>\n                        {\n                            this.props.equipment[ArmorSlots.Feet] ?\n                                <ItemIcon item={this.props.equipment[ArmorSlots.Feet]}\n                                          isSelected={this.props.equipment[ArmorSlots.Feet] === this.state.selectedItem}\n                                          isSmall={true} onItemSelected={this.selectItem}/>\n                                : <span className=\"rpgui-icon armor-slot\"/>\n                        }\n                    </div>\n                </div>\n\n                <div className='columns'>\n                    <div className='column'>\n                        Left Hand:<br/>\n                        {\n                            this.props.equipment[WeaponSlots.LeftHand] ?\n                                <ItemIcon item={this.props.equipment[WeaponSlots.LeftHand]}\n                                          isSelected={this.props.equipment[WeaponSlots.LeftHand] === this.state.selectedItem}\n                                          isSmall={true} onItemSelected={this.selectItem}/>\n                                : <span className=\"rpgui-icon weapon-slot\"/>\n                        }\n                    </div>\n                    <div className='column'>\n                        Right Hand:<br/>\n                        {\n                            this.props.equipment[WeaponSlots.RightHand] ?\n                                <ItemIcon item={this.props.equipment[WeaponSlots.RightHand]}\n                                          isSelected={this.props.equipment[WeaponSlots.RightHand] === this.state.selectedItem}\n                                          isSmall={true} onItemSelected={this.selectItem}/>\n                                : <span className=\"rpgui-icon weapon-slot\"/>\n                        }\n                    </div>\n                </div>\n\n                <div className='columns'>\n\n                    <div className='column'>\n                        Jewlery 1:<br/>\n                        <span className=\"rpgui-icon ring-slot\"/>\n                    </div>\n                    <div className='column'>\n                        Jewlery 2:<br/>\n                        <span className=\"rpgui-icon ring-slot\"/>\n                    </div>\n                </div>\n\n                {\n                    this.state.selectedItem && this.state.selectedItem.equiped ?\n                        <div>\n                            <hr/>\n                            <ItemDescription item={this.state.selectedItem}\n                                             onUnequip={this.unequip}/>\n                        </div> : null\n                }\n\n            </div>\n        )\n    }\n}","import React, {Component} from \"react\";\nimport Gauge from \"./Gauge\";\nimport Equipment from \"./Equipment\";\nimport PropTypes from \"prop-types\";\n\nexport default class Player extends Component {\n\n    static propTypes = {\n        player: PropTypes.object,\n        onUnequip: PropTypes.func,\n        logs: PropTypes.array\n    };\n\n    render() {\n        return (\n            <div className={\"rpgui-container framed-grey player row\"}>\n                <div className='columns'>\n\n                    <div className='column'>\n\n                        <div className='row'>\n\n                            <div>\n                                <strong>{this.props.player.class}:</strong> {this.props.player.name}\n                            </div>\n\n                            <div>\n                                <span>Str: {this.props.player.str} </span>\n                                <span>Dex: {this.props.player.dex} </span>\n                                <span>Int: {this.props.player.int} </span>\n                                <span>Luk: {this.props.player.luk} </span>\n                            </div>\n\n                            <div>\n                                <span>Atk: {this.props.player.atk()} </span>\n                                <span>Matk: {this.props.player.matk()} </span>\n                                <span>Def: {this.props.player.def()} </span>\n                                <span>Mdef: {this.props.player.mdef()} </span>\n                            </div>\n\n                        </div>\n\n                        <hr/>\n\n                        <div className='row columns'>\n\n                            <div className='column'>\n\n                                <span>\n                                    <strong> Level:</strong> {this.props.player.level}\n                                </span>\n\n                                <hr/>\n\n                                <Gauge label='EXP' max={this.props.player.expMax}\n                                       current={this.props.player.expCurrent}/>\n\n                            </div>\n\n                            <div className='column'>\n\n                                <Gauge label='HP' color='red'\n                                       max={this.props.player.hpMax}\n                                       current={this.props.player.hpCurrent}/>\n\n                                <Gauge label='STA' color='green'\n                                       max={this.props.player.staMax}\n                                       current={this.props.player.staCurrent}/>\n\n                            </div>\n\n                        </div>\n\n                        <div className='rpgui-container framed-grey logs'>\n                            {\n                                this.props.logs.slice(-4).map((log, index) => {\n                                    return (\n                                        <div key={index}>\n                                            {log}\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n\n                    </div>\n\n                    <div className='column'>\n                        <Equipment equipment={this.props.player.equipment}\n                                   onUnequip={this.props.onUnequip}/>\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}","function getRandomInt(\n    min,\n    max\n) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n\n    //The maximum is exclusive and the minimum is inclusive\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction getRandomArrayItem({\n                                array,\n                                start = 0\n                            }) {\n    const randomIndex = getRandomInt(start, array.length - 1);\n    return array[randomIndex]\n}\n\nfunction getRandomObjectEntry({\n                                  object,\n                                  start\n                              }) {\n    const array = Object.keys(object);\n\n    const randomIndex = getRandomArrayItem({\n        array,\n        start\n    });\n\n    return object[randomIndex];\n}\n\nexport {\n    getRandomInt,\n    getRandomArrayItem,\n    getRandomObjectEntry\n};","import React, {Component} from \"react\";\nimport {ItemCategories, ResourceTypes} from \"../engine/data/types\";\nimport PropTypes from \"prop-types\";\n\nexport default class ItemIcon extends Component {\n\n    static propTypes = {\n        item: PropTypes.object,\n        onItemSelected: PropTypes.func,\n        isSelected: PropTypes.bool,\n        isSmall: PropTypes.bool\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.itemSelected = this.itemSelected.bind(this);\n    }\n\n    itemSelected() {\n        if (this.props.onItemSelected) {\n            this.props.onItemSelected(this.props.item)\n        }\n    }\n\n\n    render() {\n        const containerClasses = [\n            \"framed\",\n            \"item-icon\"\n        ];\n\n        // item disabled?\n        if (this.props.item.delay && this.props.item.delay.isDelaying) {\n            containerClasses.push(\"rpgui-disabled\")\n        }\n\n        // item selected?\n        if (this.props.isSelected) {\n            containerClasses.push(\"item-icon-selected\")\n        }\n\n        const itemClasses = [\n            \"rpgui-icon\"\n        ];\n\n        if (this.props.isSmall) {\n            itemClasses.push(\"icon-small\")\n        }\n\n        // evaluate item type\n        if (this.props.item.category === ItemCategories.Weapon) {\n            itemClasses.push(\"sword\")\n        } else if (this.props.item.category === ItemCategories.Armor) {\n            itemClasses.push(\"shield\")\n        }\n\n        // evaluate material\n        if (this.props.item.material === ResourceTypes.Wood) {\n            itemClasses.push(\"wood\");\n        } else if (this.props.item.material === ResourceTypes.Metal) {\n            itemClasses.push(\"metal\");\n        } else if (this.props.item.material === ResourceTypes.Cloth) {\n            itemClasses.push(\"cloth\");\n        } else if (this.props.item.material === ResourceTypes.Diamond) {\n            itemClasses.push(\"diamond\");\n        }\n\n        return (\n            <div className=\"rpgui-container framed-grey item-container\"\n                 onClick={this.itemSelected}>\n\n                <div className={containerClasses.join(\" \")}>\n\n                    <div className={itemClasses.join(\" \")}/>\n\n                    {\n                        !(this.props.item.delay && this.props.item.delay.isDelaying) ?\n                            <span className='item-level'>\n                                {this.props.item.level}\n                            </span> : null\n                    }\n\n                    {\n                        this.props.item.delay && this.props.item.delay.isDelaying ?\n                            <div className='item-timeout nowrap'>\n                                <span>{this.props.item.delay.timer.getTimeoutString()}</span>\n                            </div> : null\n                    }\n\n                </div>\n\n            </div>\n        )\n    }\n}","import {\n    Unknown,\n    ResourceTypes\n} from \"./data/types\";\n\nexport default class Ratios {\n\n    [ResourceTypes.Wood] = 0;\n    [ResourceTypes.Metal] = 0;\n    [ResourceTypes.Cloth] = 0;\n    [ResourceTypes.Diamond] = 0;\n\n    getHighest() {\n        const sortable = [];\n\n        for (const resource of Object.getOwnPropertySymbols(this)) {\n            sortable.push([\n                resource,\n                this[resource]\n            ]);\n        }\n\n        sortable.sort(function (a, b) {\n            return a[1] - b[1];\n        });\n\n        const highest = sortable[sortable.length - 1][0];\n\n        console.log(this);\n\n        if (this[highest] === 0) {\n            return Unknown;\n        }\n\n        return highest;\n    }\n}","import {ResourceTypes} from \"./data/types\";\nimport math from \"mathjs\";\nimport Ratios from \"./ratios\";\n\nexport default class Resources {\n\n    constructor({\n                    initialResources = 0,\n                    resources\n                } = {}) {\n        this[ResourceTypes.Wood] = resources ? resources[ResourceTypes.Wood] : initialResources;\n        this[ResourceTypes.Metal] = resources ? resources[ResourceTypes.Metal] : initialResources;\n        this[ResourceTypes.Cloth] = resources ? resources[ResourceTypes.Cloth] : initialResources;\n        this[ResourceTypes.Diamond] = resources ? resources[ResourceTypes.Diamond] : initialResources;\n    }\n\n    add(resources) {\n        this[ResourceTypes.Wood] += resources[ResourceTypes.Wood];\n        this[ResourceTypes.Metal] += resources[ResourceTypes.Metal];\n        this[ResourceTypes.Cloth] += resources[ResourceTypes.Cloth];\n        this[ResourceTypes.Diamond] += resources[ResourceTypes.Diamond];\n        return this;\n    }\n\n    sub(resources) {\n        this[ResourceTypes.Wood] -= resources[ResourceTypes.Wood];\n        this[ResourceTypes.Metal] -= resources[ResourceTypes.Metal];\n        this[ResourceTypes.Cloth] -= resources[ResourceTypes.Cloth];\n        this[ResourceTypes.Diamond] -= resources[ResourceTypes.Diamond];\n        return this;\n    }\n\n    sum() {\n        return (\n            this[ResourceTypes.Wood] +\n            this[ResourceTypes.Metal] +\n            this[ResourceTypes.Cloth] +\n            this[ResourceTypes.Diamond]\n        );\n    }\n\n    gcd() {\n        return math.gcd(\n            this[ResourceTypes.Wood],\n            this[ResourceTypes.Metal],\n            this[ResourceTypes.Cloth],\n            this[ResourceTypes.Diamond]\n        );\n    }\n\n    ratios() {\n\n        const gcd = this.gcd();\n        const ratios = new Ratios();\n\n        ratios[ResourceTypes.Wood] = this[ResourceTypes.Wood] / gcd;\n        ratios[ResourceTypes.Metal] = this[ResourceTypes.Metal] / gcd;\n        ratios[ResourceTypes.Cloth] = this[ResourceTypes.Cloth] / gcd;\n        ratios[ResourceTypes.Diamond] = this[ResourceTypes.Diamond] / gcd;\n\n        return ratios\n    }\n}","import {getRandomArrayItem} from \"../../tools/rand\";\nimport peopleNames from \"../data/people_names\"\nimport {Unknown} from \"../data/types\";\nimport Organism from \"../organism\";\nimport Delay from \"../delay\";\n\nexport default class Craefter extends Organism {\n    isCraefting = false;\n    onDoneCreating = null;\n\n    constructor({\n                    type = Unknown,\n                    name = getRandomArrayItem({\n                        array: peopleNames\n                    }),\n                    str = 0,\n                    int = 0,\n                    dex = 0,\n                    luk = 0,\n                    sta = 5\n                } = {}) {\n        super({\n            name,\n            sta\n        });\n\n        this.delay = new Delay(global.delay || 5);\n\n        this.delay.onDelayExpired = () => {\n            if (this.onDoneCreating) {\n                this.onDoneCreating();\n            }\n        };\n\n        this.type = type;\n        this.name = name;\n\n        this.str = str;\n        this.int = int;\n        this.dex = dex;\n        this.luk = luk;\n    }\n\n    tick() {\n        if (this.staCurrent < this.staMax) {\n            this.staCurrent += 0.01;\n        }\n    }\n\n    static calculateMaterialImpact(\n        material\n    ) {\n        return ((material ? material : 0.1) / 100) * 80\n    }\n\n    evaluateItemType(\n        /* eslint-disable-next-line no-unused-vars */\n        ratios,\n        /* eslint-disable-next-line no-unused-vars */\n        highestResource\n    ) {\n        // stub please override\n    }\n\n    evaluateItem({\n                     /* eslint-disable-next-line no-unused-vars */\n                     resources\n                 }) {\n        // stub please override\n    }\n\n    craeft(\n        /* eslint-disable-next-line no-unused-vars */\n        resources\n    ) {\n        // stub please override\n    }\n\n    evaluateSlot(\n        /* eslint-disable-next-line no-unused-vars */\n        type\n    ) {\n\n    }\n\n    evaluateItemName(\n        /* eslint-disable-next-line no-unused-vars */\n        type,\n        /* eslint-disable-next-line no-unused-vars */\n        slot,\n        /* eslint-disable-next-line no-unused-vars */\n        isMultiSlot\n    ) {\n    }\n\n    exhaust(\n        sta\n    ) {\n        super.exhaust(sta);\n\n        if (Math.floor(this.staCurrent <= 0)) {\n            this.dead = true;\n        }\n    }\n}\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class Progress extends Component {\n\n    static propTypes = {\n        color: PropTypes.string,\n        filled: PropTypes.number\n    };\n\n    render() {\n        return (\n            <div className={`rpgui-progress ${this.props.color}`}>\n\n                <div className=\"rpgui-progress-track\">\n                    <div className={`rpgui-progress-fill ${this.props.color}`}\n                         style={{\n                             left: \"0px\",\n                             width: `${this.props.filled}%`\n                         }}>\n                    </div>\n                </div>\n\n                <div className=\"rpgui-progress-left-edge\">\n                </div>\n                <div className=\"rpgui-progress-right-edge\">\n                </div>\n\n            </div>\n        )\n    }\n}","import Progress from \"./Progress\";\nimport React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class Gauge extends Component {\n\n    static propTypes = {\n        label: PropTypes.string,\n        current: PropTypes.number,\n        color: PropTypes.string,\n        max: PropTypes.number\n    };\n\n    render() {\n        return (\n            <div className='row'>\n\n                <span className='nowrap'>\n                    {this.props.label}: {Math.floor(this.props.current)}/{Math.floor(this.props.max)}\n                </span>\n\n                <Progress color={this.props.color}\n                          filled={100 / this.props.max * this.props.current}/>\n\n            </div>\n        )\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Component} from \"react\";\nimport Header from \"./components/structure/Header\";\n\nexport default class About extends Component {\n\n    render() {\n        return (\n            <div className='rpgui-content container'>\n                <Header/>\n\n                <div>\n                    <a href='#craeft'>back</a>\n                    https://en.wikipedia.org/wiki/Warning_Forever\n                    https://en.wikipedia.org/wiki/Universal_Paperclips\n                    https://merchantrpg.fandom.com/wiki/Merchant_Wiki\n                    https://en.wikipedia.org/wiki/Minecraft\n                    https://en.wikipedia.org/wiki/CryptoKitties\n                </div>\n            </div>\n        )\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./css/rpgui.css\"\nimport \"bulma/css/bulma.min.css\"\nimport \"./css/Craeft.css\"\n\nimport Craeft from \"./Craeft\";\nimport About from \"./About\";\n\nwindow.addEventListener(\"hashchange\", render, false);\n\nfunction render() {\n    let page = window.location.hash.substr(1, window.location.hash.length);\n\n    let component;\n\n    switch (page) {\n        case \"about\":\n            component = <About/>;\n            break;\n\n        case \"craeft\":\n        default:\n            component = <Craeft/>;\n            break;\n    }\n\n    ReactDOM.render(\n        component,\n        document.getElementById(\"root\")\n    );\n}\n\nrender();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export default class Timer {\n\n    constructor(\n        {\n            callback,\n            delay,\n            autoStart = true\n        } = {}\n    ) {\n\n        this.callback = callback;\n\n        this.id = undefined;\n        this.startDate = undefined;\n\n        this.remaining = delay * 1000;\n\n        this.running = false;\n\n        if (autoStart) {\n            this.start();\n        }\n    }\n\n    start() {\n        this.running = true;\n        this.startDate = new Date();\n        this.id = setTimeout(this.callback, this.remaining)\n    }\n\n    pause() {\n        this.running = false;\n        clearTimeout(this.id);\n        this.remaining -= new Date() - this.startDate\n    }\n\n    getTimeLeft() {\n        if (this.running) {\n            this.pause();\n            this.start()\n        }\n\n        return this.remaining\n    }\n\n    getTimeLeftInSeconds() {\n        return Math.round(this.getTimeLeft() / 1000)\n    }\n\n    getTimeoutString() {\n        const timeoutInSeconds = this.getTimeLeftInSeconds();\n\n        const mins = Math.floor(timeoutInSeconds / 60);\n\n        if (mins > 0) {\n            return `~${mins} Min`\n        }\n\n        return `${timeoutInSeconds} Sec`\n    }\n\n    getStateRunning() {\n        return this.running\n    }\n}"],"sourceRoot":""}